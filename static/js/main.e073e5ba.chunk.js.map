{"version":3,"sources":["actions/cart.js","actions/payment.js","actions/customerAccounts.js","reducers/accounts.js","reducers/products.js","reducers/fees.js","reducers/cart.js","actions/addAccountModal.js","actions/editAccountModal.js","reducers/editAccountModal.js","reducers/payment.js","reducers/paymentMethods.js","reducers/index.js","reducers/addAccountModal.js","components/PaymentDetailsSteps/index.js","components/CustomerAccount/index.js","containers/CustomerAccountX.js","components/CustomerAccounts/styles.js","components/CustomerAccounts/index.js","components/PaymentSelection/styles.js","components/PaymentSelection/index.js","components/MaterialTextField/styles.js","components/MaterialTextField/index.js","components/MaterialSelect/styles.js","components/MaterialSelect/index.js","validationRules.js","components/AddAccountForm/index.js","components/AddAccountModal/index.js","components/EditAccountForm/index.js","components/EditAccountModal/index.js","components/feesDescription.js","components/DetailedCart/styles.js","components/DetailedCart/index.js","containers/AddAccountModalX.js","containers/EditAccountModalX.js","containers/CustomerAccountsX.js","containers/PaymentSelectionX.js","components/OrderCompleted.js","containers/DetailedCartX.js","components/PaymentCreator.js","App.js","serviceWorker.js","index.js"],"names":["SET_CART_TOTAL_VALUE","RESET_CART_TOTAL","SET_PAYMENT_ACCOUNT","SET_PAYMENT_METHOD","selectAccount","id","dispatch","getState","accData","accounts","type","setPaymentAccount","selectMethod","method","methodId","state","subtotal","cart","paymentMethods","fees","console","log","value","total","map","reduce","currentTotal","feeData","parseFloat","percents","setPaymentMethod","Math","round","CREATE_ACCOUNT_INSTANCE","UPDATE_ACCOUNT_INSTANCE","DELETE_ACCOUNT_INSTANCE","createAccountInstance","data","editAccount","_state$payment","payment","account","updateAccountInstance","deleteAccount","deleteAccountInstance","initialState","0","name","email","address","cardData","number","expDate","cvv","paypalData","bank","created_at","1","2","title","subtitle","price","label","items","product","quantity","SHOW_ADD_ACCOUNT_MODAL","HIDE_ADD_ACCOUNT_MODAL","hideAddAccountModal","SHOW_EDIT_ACCOUNT_MODAL","HIDE_EDIT_ACCOUNT_MODAL","hideEditAccountModal","accountId","isVisible","paymentApp","combineReducers","addAccountModal","arguments","length","undefined","editAccountModal","action","Object","objectSpread","defineProperty","_","omit","products","form","formReducer","PaymentDetailsSteps","currentStep","this","props","react_default","a","createElement","Tabs_default","Tab_default","disableRipple","disabled","Component","CustomerAccount","_this$props","classes","methodData","isSelected","deleteAccountHandler","selectAccountHandler","showEditAccountModalHandler","Paper_default","className","paper","markArea","Radio_default","checked","onClick","accDataArea","concat","actionButton","editButton","Create_default","deleteButton","DeleteForever_default","withStyles","theme","padding","spacing","unit","paddingLeft","position","top","left","transform","cursor","fontWeight","display","borderRadius","width","height","lineHeight","right","CustomerAccountX","connect","ownProps","styles","gridContainer","buttonIcon","marginRight","CustomerAccounts","onAddAccountClick","isAccountSelected","Grid_default","container","direction","item","components_PaymentDetailsSteps","values","sort","b","key","containers_CustomerAccountX","Fab_default","color","aria-label","Add_default","justify","alignItems","Button_default","KeyboardBackspace_default","component","Link","to","variant","size","componentStyles","PaymentSelection","selectedMethodId","selectedAccountId","selectPaymentHandler","keys","ListItem_default","role","e","dense","button","ListItemIcon_default","Checkbox_default","edge","tabIndex","ListItemText_default","primary","errorMessage","palette","error","main","warn","MaterialTextField","input","_this$props$meta","meta","touched","warning","TextField_default","assign","onChange","materialSelectFC","MaterialSelect","children","custom","FormControl_default","InputLabel_default","Select_default","required","test","AddAccountForm","handleSubmit","onSubmit","Field","validate","requiredValidationRule","fullWidth","margin","emailValidationRule","MenuItem_default","reduxForm","newAccount","String","parseInt","random","Date","now","setTimeout","AddAccountModal","addAccountModalShow","handleClose","Dialog_default","minWidth","open","DialogTitle_default","DialogContent_default","DialogContentText_default","components_AddAccountForm","DialogActions_default","submit","EditAccountForm","initialValues","EditAccountModal","components_EditAccountForm","feesDescription","WrappedComponent","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","methodFees","descriptions","i","arr","prevFees","slice","prevFeesSubtotal","currentSubtotal","currentFeeData","cartTitleSection","marginBottom","cartTitle","paddingBottom","cartTitleHeader","fontSize","itemsCountBadge","backgroundColor","textAlign","cartItems","cartItem","cartItemTitle","cartItemSubtitle","grey","cartItemPrice","summary","marginTop","totalRow","summaryValue","summaryRow","DetailedCart","_this$props2","itemsCount","xs","Typography_default","Divider_default","cartDetails","renderSummary","AddAccountModalX","handleAdd","EditAccountModalX","_state$editAccountMod","handleSave","CustomerAccountsX","PaymentSelectionX","OrderCompleted","DetailedCartX","currentItem","PaymentCreator","rootGrid","paymentDetailsWrapper","react_router_dom","react_router","path","exact","cartWrapper","containers_DetailedCartX","containers_AddAccountModalX","containers_EditAccountModalX","flexWrap","flex","store","createStore","applyMiddleware","logger","thunk","App","react_redux_es","components_PaymentCreator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e073e5ba.chunk.js","sourcesContent":["/*\r\n * action types\r\n */\r\n\r\n export const SET_CART_TOTAL_VALUE = 'SET_CART_TOTAL_VALUE';\r\n export const RESET_CART_TOTAL = 'RESET_CART_TOTAL';\r\n\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setCartTotalValue(value) {\r\n  return { type: SET_CART_TOTAL_VALUE, value }\r\n}\r\n\r\nexport function resetCartTotal() {\r\n  return { type: RESET_CART_TOTAL }\r\n}","import {\r\n  setCartTotalValue,\r\n} from '../actions/cart';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const SET_PAYMENT_ACCOUNT = 'SET_PAYMENT_ACCOUNT';\r\nexport const SET_PAYMENT_METHOD = 'SET_PAYMENT_METHOD';\r\n// export const SET_TOTAL_VALUE = 'SET_TOTAL_VALUE';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setPaymentAccount(id) {\r\n  return { type: SET_PAYMENT_ACCOUNT, id };\r\n}\r\n\r\nexport function selectAccount(id) {\r\n  return function (dispatch, getState) {\r\n    const state = getState();\r\n    const accData = state.accounts[id];\r\n    dispatch(setPaymentAccount(id));\r\n    dispatch(selectMethod(accData.method));\r\n  }\r\n}\r\n\r\n// export function setTotalValue(value) {\r\n//   return { type: SET_TOTAL_VALUE, value }\r\n// }\r\n\r\nexport function setPaymentMethod(methodId) {\r\n  return { type: SET_PAYMENT_METHOD, id: methodId };\r\n}\r\n\r\nexport function selectMethod(methodId) {\r\n  return function (dispatch, getState) {\r\n    const state = getState();\r\n    const {\r\n      cart: {\r\n        subtotal,\r\n      },\r\n      paymentMethods,\r\n      fees,\r\n    } = state;\r\n\r\n    console.log('Here!!!');\r\n    console.log(paymentMethods[methodId]);\r\n    const methodFees = paymentMethods[methodId].fees.map(id => fees[id]);\r\n\r\n    const total = methodFees.reduce((currentTotal, feeData) => {\r\n      return currentTotal += currentTotal * (parseFloat(feeData.percents) / 100);\r\n    }, subtotal);\r\n\r\n    \r\n    dispatch(setPaymentMethod(methodId));\r\n    dispatch(setCartTotalValue(Math.round(total * 100)/100));\r\n  }\r\n}","import {\r\n  resetCartTotal,\r\n} from './cart';\r\nimport { selectMethod } from './payment';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const CREATE_ACCOUNT_INSTANCE = 'CREATE_ACCOUNT_INSTANCE';\r\nexport const UPDATE_ACCOUNT_INSTANCE = 'UPDATE_ACCOUNT_iNSTANCE';\r\nexport const DELETE_ACCOUNT_INSTANCE = 'DELETE_ACCOUNT_INSTANCE';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function createAccountInstance(data) {\r\n  return { type: CREATE_ACCOUNT_INSTANCE, data }\r\n}\r\n\r\nexport function updateAccountInstance(id, data) {\r\n  return { type: UPDATE_ACCOUNT_INSTANCE, id, data }\r\n}\r\n\r\nexport function editAccount (id, data) {\r\n  return function (dispatch, getState) {\r\n    const state = getState();\r\n    const {\r\n      payment: {\r\n        account,\r\n        method,\r\n      },\r\n    } = state;\r\n\r\n    if (id === account && data.method !== method) {\r\n      dispatch(selectMethod(data.method));\r\n    }\r\n    dispatch(updateAccountInstance(id, data));\r\n  }\r\n}\r\n\r\nexport function deleteAccount(id) {\r\n  return function (dispatch, getState) {\r\n    const state = getState();\r\n    if (state.payment.account === id) {\r\n      dispatch(resetCartTotal());\r\n    }\r\n    dispatch(deleteAccountInstance(id));\r\n  }\r\n}\r\nexport function deleteAccountInstance(id) {\r\n  return { type: DELETE_ACCOUNT_INSTANCE, id }\r\n}","import _ from 'lodash';\r\n\r\nimport {\r\n    CREATE_ACCOUNT_INSTANCE,\r\n    UPDATE_ACCOUNT_INSTANCE,\r\n    DELETE_ACCOUNT_INSTANCE,\r\n} from '../actions/customerAccounts';\r\n\r\nconst initialState = {\r\n    \"0\": {\r\n        id: \"0\",\r\n        name: 'Kusturiza d.i.o',\r\n        email: 'email1@gmail.com',\r\n        address: '',\r\n        method: '1',\r\n        cardData: {\r\n            number: '12121212121212',\r\n            expDate: '12/18',\r\n            cvv: '123',\r\n        },\r\n        paypalData: {\r\n            number: null,\r\n        },\r\n        bank: 'Siq banka',\r\n        created_at: 1,\r\n    }, \r\n    \"1\": {\r\n        id: \"1\",\r\n        name: 'Kusturiza d.i.o',\r\n        email: 'email2@gmail.com',\r\n        address: '',\r\n        method: '0',\r\n        cardData: {\r\n            number: null,\r\n            expDate: null,\r\n            cvv: null,\r\n        },\r\n        paypalData: {\r\n            number: 'paypal@kusturiza.cz',\r\n        },\r\n        bank: 'PayPal',\r\n        created_at: 2,\r\n    }, \r\n    \"2\": {\r\n    id: \"2\",\r\n    name: 'Kusturiza d.i.o',\r\n    email: 'email3@gmail.com',\r\n    address: '',\r\n    method: '2',\r\n    cardData: {\r\n        number: null,\r\n        expDate: null,\r\n        cvv: null,\r\n    },\r\n    paypalData: {\r\n        number: 'paypal@kusturiza.cz',\r\n    },\r\n    bank: 'PayPal',\r\n    created_at: 3,\r\n}};\r\n\r\nexport default function customerAccounts (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_ACCOUNT_INSTANCE:\r\n            return {\r\n                ...state,\r\n                [action.data.id]: action.data,\r\n            };\r\n        case DELETE_ACCOUNT_INSTANCE:\r\n            return _.omit(state, action.id)\r\n        case UPDATE_ACCOUNT_INSTANCE:          \r\n            return {\r\n                ...state,\r\n                [action.data.id]: action.data,\r\n            };      \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    \"0\": {\r\n        id: \"0\",\r\n        title: 'Glith',\r\n        subtitle: 'Christian Louboutin',\r\n        price: 200\r\n    }, \r\n    \"1\": {\r\n        id: \"1\",\r\n        title: 'Bianca',\r\n        subtitle: 'Christian Louboutin',\r\n        price: 200\r\n    },\r\n};\r\n\r\nexport default function products (state = initialState, action) {\r\n    return state;\r\n}","const initialState = {\r\n    \"0\": {\r\n        id: \"0\",\r\n        name: \"comission\",\r\n        label: \"Payment processing services 1%\",\r\n        percents: \"1\",\r\n    },\r\n    \"1\": {\r\n        id: \"1\",\r\n        name: \"vat\",\r\n        label: \"VAT 21%\",\r\n        percents: \"21\",\r\n    },\r\n};\r\n\r\nexport default function fees (state = initialState) {\r\n    return state;\r\n}","import {\r\n    SET_CART_TOTAL_VALUE,\r\n    RESET_CART_TOTAL,\r\n} from '../actions/cart';\r\n\r\nconst initialState = {\r\n    items: [\r\n        {\r\n            product: \"0\",\r\n            quantity: 1\r\n        },\r\n        {\r\n            product: \"1\",\r\n            quantity: 1\r\n        }\r\n    ],\r\n    subtotal: 400,\r\n    total: 400,\r\n};\r\n\r\nexport default function cart (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CART_TOTAL_VALUE:\r\n            return {\r\n                ...state,\r\n                total: action.value,\r\n            }\r\n        case RESET_CART_TOTAL:\r\n            return {\r\n                ...state,\r\n                total: state.subtotal,\r\n            }\r\n        default:\r\n    }\r\n    return state;\r\n}","import {\r\n  createAccountInstance,\r\n} from './customerAccounts';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const SHOW_ADD_ACCOUNT_MODAL = 'SHOW_ADD_ACCOUNT_MODAL';\r\nexport const HIDE_ADD_ACCOUNT_MODAL = 'HIDE_ADD_ACCOUNT_MODAL';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function showAddAccountModal() {\r\n  return { type: SHOW_ADD_ACCOUNT_MODAL }\r\n}\r\n\r\nexport function hideAddAccountModal(id) {\r\n  return { type: HIDE_ADD_ACCOUNT_MODAL }\r\n}\r\n\r\nexport function addAccountFromModal(accData) {\r\n  return (dispatch) => {\r\n    dispatch(hideAddAccountModal());\r\n    setTimeout(()=>{\r\n      dispatch(createAccountInstance(accData));\r\n    }, 500);\r\n  }\r\n}\r\n","import {\r\n  editAccount,\r\n} from './customerAccounts';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const SHOW_EDIT_ACCOUNT_MODAL = 'SHOW_EDIT_ACCOUNT_MODAL';\r\nexport const HIDE_EDIT_ACCOUNT_MODAL = 'HIDE_EDIT_ACCOUNT_MODAL';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function showEditAccountModal(accountId) {\r\n  return { type: SHOW_EDIT_ACCOUNT_MODAL, accountId }\r\n}\r\n\r\nexport function hideEditAccountModal(id) {\r\n  return { type: HIDE_EDIT_ACCOUNT_MODAL }\r\n}\r\n\r\nexport function editAccountFromModal(id, data) {\r\n  return (dispatch) => {\r\n    dispatch(hideEditAccountModal());\r\n    setTimeout(()=>{\r\n      dispatch(editAccount(id, data));\r\n    }, 500);\r\n  }\r\n}\r\n","import {\r\n    SHOW_EDIT_ACCOUNT_MODAL,\r\n    HIDE_EDIT_ACCOUNT_MODAL,\r\n} from '../actions/editAccountModal';\r\n\r\nconst initialState = {\r\n    accountId: null,\r\n    isVisible: false,\r\n};\r\n\r\nexport default function editAccountModal (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SHOW_EDIT_ACCOUNT_MODAL:\r\n            return {\r\n                accountId: action.accountId,\r\n                isVisible: true,\r\n            };\r\n        case HIDE_EDIT_ACCOUNT_MODAL:\r\n            return {\r\n                accountId: null,\r\n                isVisible: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_PAYMENT_ACCOUNT, \r\n    SET_PAYMENT_METHOD,\r\n} from '../actions/payment';\r\nimport {\r\n    DELETE_ACCOUNT_INSTANCE,\r\n} from '../actions/customerAccounts';\r\n\r\nconst initialState = {\r\n    account: null,\r\n    method: null,\r\n};\r\n\r\nexport default function payment (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PAYMENT_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: action.id,\r\n            };\r\n        case SET_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                method: action.id,\r\n            };\r\n        case DELETE_ACCOUNT_INSTANCE:\r\n            if (action.id === state.account){\r\n                return {\r\n                    ...state,\r\n                    account: null,\r\n                    method: null,\r\n                }\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst initialState = {\r\n    \"0\": {\r\n        id: \"0\",\r\n        name: \"paypal\",\r\n        label: \"PayPal\",\r\n        fees: [\"0\", \"1\"],\r\n    },\r\n    \"1\": {\r\n        id: \"1\",\r\n        name: \"credit_card\",\r\n        label: \"Credit Card\",\r\n        fees: [\"0\"]\r\n    },\r\n    \"2\": {\r\n        id: \"2\",\r\n        name: \"ballance\",\r\n        label: \"Ballance\",\r\n        fees: [],\r\n    }\r\n};\r\n\r\nexport default function paymentMethods (state = initialState) {\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport customerAccounts from './accounts';\r\nimport products from './products';\r\nimport fees from './fees';\r\nimport cart from './cart';\r\nimport addAccountModal from './addAccountModal';\r\nimport editAccountModal from './editAccountModal';\r\nimport payment from './payment';\r\nimport paymentMethods from './paymentMethods';\r\n\r\nconst paymentApp = combineReducers({\r\n    addAccountModal,\r\n    editAccountModal,\r\n    accounts: customerAccounts,\r\n    products,\r\n    fees,\r\n    cart,\r\n    payment,\r\n    form: formReducer,\r\n    paymentMethods,\r\n})\r\n\r\nexport default paymentApp;","import {\r\n    SHOW_ADD_ACCOUNT_MODAL,\r\n    HIDE_ADD_ACCOUNT_MODAL,\r\n} from '../actions/addAccountModal';\r\n\r\nexport default function addAccountModal (state = false, action) {\r\n    switch (action.type) {\r\n        case SHOW_ADD_ACCOUNT_MODAL:\r\n            return true;\r\n        case HIDE_ADD_ACCOUNT_MODAL:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nclass PaymentDetailsSteps extends Component {\r\n    render() {\r\n        const {\r\n            currentStep\r\n        } = this.props;\r\n\r\n        return (\r\n            <Tabs\r\n                value={currentStep}\r\n            >\r\n                <Tab\r\n                    disableRipple\r\n                    value=\"accounts\"\r\n                    label=\"01 CUSTOMER ACCOUNT\"\r\n                    disabled={currentStep!=='accounts'}\r\n                />\r\n                <Tab\r\n                    disableRipple\r\n                    value=\"methods\"\r\n                    label=\"02 PAYMENT SELECTION\"\r\n                    disabled={currentStep!=='methods'}\r\n                />\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentDetailsSteps;","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    paddingLeft: '68px',\r\n    position: 'relative',\r\n  },\r\n  markArea: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '10px',\r\n    transform: 'translate(0,-50%)',\r\n  },\r\n  actionButton: {\r\n    position: 'absolute',\r\n    top: 6,\r\n    cursor: 'pointer',\r\n    fontWeight: 700,\r\n    display: 'block',\r\n    borderRadius: '100%',\r\n    width: 20,\r\n    height: 20,\r\n    lineHeight: '1',\r\n  },\r\n  editButton: {\r\n    right: 36,\r\n  },\r\n  deleteButton: {\r\n    right: 6,\r\n  }\r\n});\r\n\r\nclass CustomerAccount extends Component {\r\n    render() {\r\n      const {\r\n        classes,\r\n        accData,\r\n        methodData,\r\n        isSelected,\r\n        deleteAccountHandler,\r\n        selectAccountHandler,\r\n        showEditAccountModalHandler,\r\n      } = this.props;\r\n\r\n      return (\r\n        <Paper\r\n          className={classes.paper + ' customerAccountItem'}\r\n        >\r\n          <div className={classes.markArea}>\r\n            <Radio\r\n              checked={isSelected}\r\n              onClick={selectAccountHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.accDataArea}>\r\n            <h3>{accData.name}</h3>\r\n            <p>{accData.email}</p>\r\n            <p><em>{methodData.label}</em></p>\r\n            <span className={`${classes.actionButton} ${classes.editButton}`} onClick={showEditAccountModalHandler}>\r\n                <CreateIcon />\r\n            </span>\r\n            <span className={`${classes.actionButton} ${classes.deleteButton}`} onClick={deleteAccountHandler}>\r\n                <DeleteForeverIcon />\r\n            </span>\r\n          </div>\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(styles)(CustomerAccount);","import { connect } from 'react-redux';\r\nimport {\r\n    deleteAccount,\r\n} from '../actions/customerAccounts';\r\nimport {\r\n    showEditAccountModal,\r\n} from '../actions/editAccountModal';\r\nimport CustomerAccount from '../components/CustomerAccount';\r\nimport { selectAccount } from '../actions/payment';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const {\r\n        accounts,\r\n        payment,\r\n        paymentMethods,\r\n    } = state;\r\n\r\n    const {\r\n        id,\r\n    } = ownProps;\r\n\r\n    const accData = accounts[id];\r\n\r\n    return {\r\n        accData,\r\n        methodData: paymentMethods[accData.method],\r\n        isSelected: accData.id === payment.account,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        deleteAccountHandler: () => {\r\n            dispatch(deleteAccount(ownProps.id));\r\n        },\r\n        selectAccountHandler: () => {\r\n            dispatch(selectAccount(ownProps.id));\r\n        },\r\n        showEditAccountModalHandler: () => {\r\n            dispatch(showEditAccountModal(ownProps.id));\r\n        }\r\n    }\r\n}\r\n\r\nconst CustomerAccountX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CustomerAccount);\r\n\r\nexport default CustomerAccountX;","const styles = theme => ({\r\n    gridContainer: {\r\n      padding: theme.spacing.unit * 2,\r\n    },\r\n    buttonIcon: {\r\n      marginRight: '5px',\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport PaymentDetailsSteps from '../PaymentDetailsSteps';\r\nimport CustomerAccountX from '../../containers/CustomerAccountX';\r\nimport componentStyles from './styles';\r\n\r\nclass CustomerAccounts extends Component {\r\n    render() {\r\n      const {\r\n        accounts,\r\n        onAddAccountClick,\r\n        isAccountSelected,\r\n        classes,\r\n      } = this.props;\r\n\r\n      return (\r\n        <div className=\"customerAccounts\">\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <PaymentDetailsSteps currentStep={'accounts'} />\r\n            </Grid>\r\n            <Grid item>\r\n              <div className={classes.gridContainer + \" customerAccounts__grid\"}>\r\n                <Grid container spacing={24}>\r\n                  {Object.values(accounts).sort((a, b) => {\r\n                    if (a.created_at > b.created_at) {\r\n                      return 1;\r\n                    }\r\n                    if (a.created_at < b.created_at) {\r\n                      return -1;\r\n                    }\r\n                    return 0;\r\n                  }).map((accData) => (\r\n                    <Grid key={accData.id} item>\r\n                      <CustomerAccountX id={accData.id} />\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item>\r\n                    <Fab color=\"primary\" aria-label=\"Add\" onClick={onAddAccountClick}>\r\n                      <AddIcon />\r\n                    </Fab>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Button>\r\n                    <KeyboardBackspaceIcon className={classes.buttonIcon} />\r\n                    Return to shop\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button component={Link} to=\"/methods\" disabled={!isAccountSelected} variant=\"contained\" size=\"large\" color=\"primary\">\r\n                    continue to payment\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(componentStyles)(CustomerAccounts);","const styles = theme => ({\r\n    buttonIcon: {\r\n      marginRight: '5px',\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport PaymentDetailsSteps from '../PaymentDetailsSteps';\r\nimport componentStyles from './styles';\r\n\r\nclass PaymentSelection extends Component {\r\n    render() {\r\n      const {\r\n        classes,\r\n        selectedMethodId,\r\n        selectedAccountId,\r\n        selectPaymentHandler,\r\n        paymentMethods,\r\n      } = this.props;\r\n\r\n      return (\r\n        <div className=\"paymentSelection\">\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <PaymentDetailsSteps currentStep={'methods'} />\r\n            </Grid>\r\n            <Grid item>\r\n              {Object.keys(paymentMethods).map(id => {\r\n                const methodData = paymentMethods[id];\r\n\r\n                return (\r\n                  <ListItem key={id} role={undefined} onClick={e => selectPaymentHandler(id)} dense button>\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                          edge=\"start\"\r\n                          checked={selectedMethodId === id}\r\n                          tabIndex={-1}\r\n                          disableRipple\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={methodData.label} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Button component={Link} to=\"/\">\r\n                    <KeyboardBackspaceIcon className={classes.buttonIcon} />\r\n                    Return to customer account\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button component={Link} disabled={selectedMethodId === null || selectedAccountId === null} to=\"/checkout\" variant=\"contained\" size=\"large\" color=\"primary\">\r\n                    complete order\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(componentStyles)(PaymentSelection);","const styles = theme => ({\r\n    errorMessage: {\r\n      color: theme.palette.error.main,\r\n    },\r\n    warn: {\r\n      color: '#ffc107',\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport componentStyles from './styles';\r\n\r\nclass MaterialTextField extends Component {\r\n  render () {\r\n    const {\r\n      input,\r\n      meta: {\r\n        touched,\r\n        error,\r\n        warning,\r\n      },\r\n      classes,\r\n    } = this.props;\r\n    return (\r\n    <div>\r\n      <TextField\r\n        {...this.props}\r\n        value={input.value}\r\n        onChange={input.onChange}\r\n      />\r\n      {touched &&\r\n        ((error && <span className={classes.errorMessage}>! {error}</span>) ||\r\n          (warning && <span className={classes.warn}>{warning}</span>))}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(componentStyles)(MaterialTextField);","const styles = theme => ({\r\n    materialSelectFC: {\r\n      width: '100%',\r\n    },\r\n    errorMessage: {\r\n      color: theme.palette.error.main,\r\n    },\r\n    warn: {\r\n      color: '#ffc107',\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport componentStyles from './styles';\r\n\r\nclass MaterialSelect extends Component {\r\n  render () {\r\n    const {\r\n      input,\r\n      meta: {\r\n        touched,\r\n        error,\r\n        warning,\r\n      },\r\n      classes,\r\n      children,\r\n      custom,\r\n    } = this.props;\r\n\r\n    return (\r\n    <FormControl className={classes.materialSelectFC}>\r\n        {custom && custom.label && <InputLabel>{custom.label}</InputLabel>}\r\n        <Select\r\n            {...custom}\r\n            {...input}\r\n        >\r\n            {children}\r\n        </Select>\r\n      {touched &&\r\n        ((error && <span className={classes.errorMessage}>! {error}</span>) ||\r\n          (warning && <span className={classes.warn}>{warning}</span>))}\r\n    </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(componentStyles)(MaterialSelect);","const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\nconst email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined;\r\n\r\nexport {\r\n    required,\r\n    email,\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport MaterialTextField from '../MaterialTextField';\r\nimport MaterialSelect from '../MaterialSelect';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\n  required as requiredValidationRule,\r\n  email as emailValidationRule,\r\n} from '../../validationRules';\r\nimport {\r\n  addAccountFromModal,\r\n} from '../../actions/addAccountModal';\r\n\r\nfunction submit (values, dispatch, form) {\r\n  let newAccount = {\r\n    ...values,\r\n    id: String(parseInt(Math.random() * 10000)),\r\n    created_at: Date.now(),\r\n  }\r\n  dispatch(addAccountFromModal(newAccount));\r\n}\r\n\r\nclass AddAccountForm extends Component {\r\n    render() {\r\n      const {\r\n        handleSubmit,\r\n        paymentMethods,\r\n      } = this.props;\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field\r\n            name='name'\r\n            validate={[requiredValidationRule]}\r\n            component={MaterialTextField}\r\n            fullWidth\r\n            label=\"Name *\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            name='email'\r\n            validate={[requiredValidationRule,emailValidationRule]}\r\n            component={MaterialTextField}\r\n            fullWidth\r\n            label=\"Email *\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            name=\"method\"\r\n            component={MaterialSelect}\r\n            validate={[requiredValidationRule]}\r\n            custom={{\r\n              label: 'Payment Method *'\r\n            }}\r\n          >\r\n            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n            {Object.keys(paymentMethods).map(id => {\r\n              const methodData = paymentMethods[id];\r\n              return (<MenuItem key={id} value={id}>{methodData.label}</MenuItem>);\r\n            })}\r\n          </Field>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default connect(state => ({paymentMethods: state.paymentMethods}))(reduxForm({form: 'addAccount', onSubmit: submit})(AddAccountForm));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { submit } from 'redux-form'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddAccountForm from '../AddAccountForm';\r\n\r\nclass AddAccountModal extends Component {\r\n    render() {\r\n      const {\r\n        addAccountModalShow,\r\n        handleClose,\r\n        dispatch,\r\n      } = this.props;\r\n      return (\r\n        <Dialog\r\n            minWidth={300}\r\n            open={addAccountModalShow}\r\n        >\r\n            <DialogTitle>\r\n                Add Customer Account\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n                </DialogContentText>\r\n                <AddAccountForm />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                 <Button onClick={() => {\r\n                    dispatch(submit('addAccount'));\r\n                 }}>\r\n                    Add\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default connect()(AddAccountModal);","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MaterialSelect from '../MaterialSelect';\r\nimport MaterialTextField from '../MaterialTextField';\r\nimport {\r\n  required as requiredValidationRule,\r\n  email as emailValidationRule,\r\n} from '../../validationRules';\r\nimport {\r\n  editAccountFromModal,\r\n} from '../../actions/editAccountModal';\r\n\r\nfunction submit (values, dispatch, form) {\r\n  dispatch(editAccountFromModal(form.accountId, values));\r\n}\r\n\r\nclass EditAccountForm extends Component {\r\n    render() {\r\n      const {\r\n        handleSubmit,\r\n        paymentMethods,\r\n      } = this.props;\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field\r\n            name='name'\r\n            validate={[requiredValidationRule]}\r\n            component={MaterialTextField}\r\n            fullWidth\r\n            label=\"Name *\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            name='email'\r\n            validate={[requiredValidationRule,emailValidationRule]}\r\n            component={MaterialTextField}\r\n            fullWidth\r\n            label=\"Email *\"\r\n            margin=\"dense\"\r\n          />\r\n          <Field\r\n            name=\"method\"\r\n            component={MaterialSelect}\r\n            validate={[requiredValidationRule]}\r\n            custom={{\r\n              label: 'Payment Method *'\r\n            }}\r\n          >\r\n            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n            {Object.keys(paymentMethods).map(id => {\r\n              const methodData = paymentMethods[id];\r\n              return (<MenuItem key={id} value={id}>{methodData.label}</MenuItem>);\r\n            })}\r\n          </Field>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default connect(state => {\r\n    const accData = state.accounts[state.editAccountModal.accountId];\r\n    const paymentMethods = state.paymentMethods;\r\n\r\n    return {\r\n      initialValues: accData,\r\n      paymentMethods,\r\n    };\r\n})(\r\n  reduxForm({form: 'editAccount', onSubmit: submit}\r\n)(\r\n  EditAccountForm\r\n));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submit } from 'redux-form'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditAccountForm from '../EditAccountForm';\r\n\r\nclass EditAccountModal extends Component {\r\n    render() {\r\n      const {\r\n        isVisible,\r\n        accountId,\r\n        handleClose,\r\n        dispatch,\r\n      } = this.props;\r\n\r\n      return (\r\n        <Dialog\r\n            minWidth={300}\r\n            open={isVisible}\r\n        >\r\n            <DialogTitle>\r\n                Edit Customer Account\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n                </DialogContentText>\r\n                <EditAccountForm accountId={accountId} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                 <Button onClick={() => {\r\n                    dispatch(submit('editAccount'));\r\n                 }}>\r\n                    Save\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default connect()(EditAccountModal);","import React, {Component} from 'react';\r\n\r\nfunction feesDescription(WrappedComponent) {\r\n    return class extends Component {\r\n        render() {\r\n            const {\r\n                methodFees,\r\n                subtotal,\r\n            } = this.props;\r\n\r\n            const descriptions = methodFees.map((feeData, i ,arr) => {\r\n                const {\r\n                    label,\r\n                } = feeData;\r\n                const prevFees = i ? arr.slice(0, i) : [feeData];\r\n                const prevFeesSubtotal = i ? prevFees.reduce((currentSubtotal, currentFeeData) => {\r\n                    return currentSubtotal *= (1 + parseFloat(currentFeeData.percents) / 100);\r\n                }, subtotal) : subtotal;\r\n                const feeTotal = Math.round((prevFeesSubtotal * (1 + parseFloat(feeData.percents) / 100) - prevFeesSubtotal) * 100) / 100;\r\n                return {\r\n                    label,\r\n                    value: feeTotal,\r\n                };\r\n            });\r\n\r\n            return <WrappedComponent feesDescription={descriptions} {...this.props} />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default feesDescription;","const styles = theme => ({\r\n    cartTitleSection: {\r\n        marginBottom: '30px',\r\n    },\r\n    cartTitle: {\r\n        paddingBottom: '10px',\r\n    },\r\n    cartTitleHeader: {\r\n        fontSize: '24px',\r\n    },\r\n    itemsCountBadge: {\r\n        minWidth: '30px',\r\n        lineHeight: '30px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: '100%',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n    },\r\n    cartItems: {\r\n        marginBottom: '30px',\r\n    },\r\n    cartItem: {\r\n        marginBottom: '20px',\r\n    },\r\n    cartItemTitle: {\r\n        fontSize: '1em',\r\n        fontWeight: 'inherit',\r\n        margin: 'auto',\r\n    },\r\n    cartItemSubtitle: {\r\n        color: theme.palette.grey['600'],\r\n        margin: '5px 0',\r\n    },\r\n    cartItemPrice: {\r\n        color: theme.palette.grey['600'],\r\n        fontWeight: '700',\r\n        margin: '10px 0 0'\r\n    },\r\n    summary: {\r\n        marginTop: '20px',\r\n        color: theme.palette.grey['600'],\r\n    },\r\n    totalRow: {\r\n        color: '#000',\r\n    },\r\n    summaryValue: {\r\n        fontWeight: '700',\r\n    },\r\n    summaryRow: {\r\n        marginTop: '15px',\r\n    }\r\n})\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport feesDescription from '../feesDescription';\r\nimport componentStyles from './styles';\r\n\r\nclass DetailedCart extends Component {\r\n    renderSummary() {\r\n        const {\r\n            feesDescription,\r\n            subtotal,\r\n            total,\r\n            classes,\r\n            methodId,\r\n        } = this.props;\r\n\r\n        return (methodId === null || total === subtotal) ? (\r\n                <div className={classes.summary}>\r\n                    <Grid container justify=\"space-between\" className={`${classes.totalRow} ${classes.summaryRow}`}>\r\n                        <Grid item>Total</Grid>\r\n                        <Grid item className={classes.summaryValue}>$ {total}</Grid>\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <div className={classes.summary}>\r\n                    <Grid container justify=\"space-between\" className={classes.summaryRow}>\r\n                        <Grid item>Subtotal</Grid>\r\n                        <Grid className={classes.summaryValue}>$ {subtotal}</Grid>\r\n                    </Grid>\r\n                    {feesDescription.map((data, i) => (\r\n                        <Grid key={i} container justify=\"space-between\" className={classes.summaryRow}>\r\n                            <Grid item>{data.label}</Grid>\r\n                            <Grid item className={classes.summaryValue}>$ {data.value}</Grid>\r\n                        </Grid>\r\n                    ))}\r\n                    <Grid container justify=\"space-between\" className={`${classes.totalRow} ${classes.summaryRow}`}>\r\n                        <Grid item>Total</Grid>   \r\n                        <Grid item className={classes.summaryValue}>$ {total}</Grid>\r\n                    </Grid>   \r\n                </div>             \r\n            );\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        classes,\r\n        itemsCount,\r\n        cartItems,\r\n      } = this.props;\r\n\r\n      return (\r\n        <div>\r\n            <section className={classes.cartTitleSection}>\r\n                <Grid container className={classes.cartTitle} alignItems=\"center\">\r\n                    <Grid item xs>\r\n                        <Typography className={classes.cartTitleHeader} variant=\"h4\">\r\n                        Shopping Cart\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <div className={classes.itemsCountBadge}>{itemsCount}</div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider />\r\n            </section>\r\n            <section className={classes.cartDetails}>\r\n                <div className={classes.cartItems}>\r\n                    {cartItems.map(item => {\r\n                        return (\r\n                            <div key={item.id} className={classes.cartItem}>\r\n                                <h5 className={classes.cartItemTitle}>\r\n                                    {item.title}\r\n                                </h5>\r\n                                <p className={classes.cartItemSubtitle}>\r\n                                    {item.subtitle}\r\n                                </p>\r\n                                <p className={classes.cartItemPrice}>\r\n                                    $ {item.price}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <Divider />\r\n                {this.renderSummary()}\r\n            </section>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default feesDescription(withStyles(componentStyles)(DetailedCart));","import { connect } from 'react-redux';\r\nimport {\r\n    hideAddAccountModal,\r\n} from '../actions/addAccountModal';\r\nimport {\r\n    createAccountInstance,\r\n} from '../actions/customerAccounts';\r\nimport { AddAccountModal } from '../components';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        addAccountModalShow: state.addAccountModal,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(hideAddAccountModal());\r\n        },\r\n        handleAdd: (data) => {\r\n            dispatch(createAccountInstance(data));\r\n        }\r\n    }\r\n}\r\n\r\nconst AddAccountModalX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(AddAccountModal);\r\n\r\nexport default AddAccountModalX;","import { connect } from 'react-redux';\r\nimport {\r\n    hideEditAccountModal,\r\n} from '../actions/editAccountModal';\r\nimport {\r\n    editAccount,\r\n} from '../actions/customerAccounts';\r\nimport { EditAccountModal } from '../components';\r\n\r\nconst mapStateToProps = state => {\r\n    const {\r\n        isVisible,\r\n        accountId,\r\n    } = state.editAccountModal;\r\n\r\n    return {\r\n        isVisible,\r\n        accountId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(hideEditAccountModal());\r\n        },\r\n        handleSave: (data) => {\r\n            dispatch(editAccount(data));\r\n        }\r\n    }\r\n}\r\n\r\nconst EditAccountModalX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(EditAccountModal);\r\n\r\nexport default EditAccountModalX;","import { connect } from 'react-redux';\r\nimport CustomerAccounts from '../components/CustomerAccounts';\r\nimport {\r\n    showAddAccountModal,\r\n} from '../actions/addAccountModal';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        accounts: state.accounts,\r\n        isAccountSelected: state.payment.account !== null,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddAccountClick: () => {\r\n            dispatch(showAddAccountModal());\r\n        }\r\n    }\r\n}\r\n\r\nconst CustomerAccountsX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CustomerAccounts);\r\n\r\nexport default CustomerAccountsX;","import { connect } from 'react-redux';\r\nimport PaymentSelection from '../components/PaymentSelection';\r\nimport { selectMethod } from '../actions/payment';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        selectedMethodId: state.payment.method,\r\n        selectedAccountId: state.payment.account,\r\n        paymentMethods: state.paymentMethods,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectPaymentHandler: (method) => {\r\n            dispatch(selectMethod(method));\r\n        }\r\n    }\r\n}\r\n\r\nconst PaymentSelectionX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(PaymentSelection);\r\n\r\nexport default PaymentSelectionX;","import React from 'react';\r\n\r\nexport default function () {\r\n    return (\r\n        <h1>Congrats !!!</h1>\r\n    );\r\n}","import { connect } from 'react-redux';\r\nimport DetailedCart from '../components/DetailedCart';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const {\r\n        cart,\r\n        products,\r\n        payment,\r\n        paymentMethods,\r\n        fees,\r\n    } = state;\r\n\r\n    const cartItems = cart.items.map(item => ({\r\n            ...products[item.product],\r\n            quantity: item.quantity,\r\n    }));\r\n    const itemsCount = cartItems.reduce((total, currentItem) => {\r\n        return total + currentItem.quantity;\r\n    }, 0);\r\n\r\n    const methodFees = payment.method ? paymentMethods[payment.method].fees.map(id => fees[id]) : [];\r\n\r\n    return {\r\n        cartItems,\r\n        itemsCount,\r\n        subtotal: cart.subtotal,\r\n        total: cart.total,\r\n        methodFees,\r\n    }\r\n}\r\n\r\nconst DetailedCartX = connect(\r\n    mapStateToProps,\r\n)(DetailedCart);\r\n\r\nexport default DetailedCartX;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AddAccountModalX from \"../containers/AddAccountModalX\";\r\nimport EditAccountModalX from \"../containers/EditAccountModalX\";\r\nimport CustomerAccountsX from '../containers/CustomerAccountsX';\r\nimport PaymentSelectionX from '../containers/PaymentSelectionX';\r\nimport OrderCompleted from './OrderCompleted';\r\nimport DetailedCartX from '../containers/DetailedCartX';\r\n\r\n\r\nconst styles = theme => ({\r\n  rootGrid: {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  paymentDetailsWrapper: {\r\n    flex: \"0 1 100%\",\r\n  },\r\n  cartWrapper: {\r\n    flex: \"1 0 400px\",\r\n    backgroundColor: \"#eceff1\",\r\n    padding: '20px',\r\n  },\r\n});\r\n\r\nclass PaymentCreator extends Component {\r\n    render() {\r\n      const {\r\n        classes,\r\n      } = this.props;\r\n      return (\r\n        <div className=\"paymentCreator\">\r\n          <Grid container className={classes.rootGrid}>\r\n            <Grid item className={classes.paymentDetailsWrapper}>\r\n              <Router>\r\n                <Route path=\"/\" exact component={CustomerAccountsX} />\r\n                <Route path=\"/methods\" component={PaymentSelectionX} />\r\n                <Route path=\"/checkout\" component={OrderCompleted} />\r\n              </Router>\r\n            </Grid>\r\n            <Grid item className={classes.cartWrapper}>\r\n              <DetailedCartX />\r\n            </Grid>\r\n          </Grid>\r\n          <AddAccountModalX />\r\n          <EditAccountModalX />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(styles)(PaymentCreator);","import React, { Component } from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport logger from 'redux-logger'\r\nimport paymentApp from './reducers';\r\nimport PaymentCreator from \"./components/PaymentCreator\";\r\nimport './App.css';\r\n\r\nconst store = createStore(\r\n  paymentApp,\r\n  applyMiddleware(logger, thunk),\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <PaymentCreator />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}